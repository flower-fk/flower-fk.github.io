<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>网页如何显示连接蓝牙设备</title>
      <link href="/posts/13477.html"/>
      <url>/posts/13477.html</url>
      
        <content type="html"><![CDATA[<h4 id="首先，让我们先了解下今天要学习的东西。"><a href="#首先，让我们先了解下今天要学习的东西。" class="headerlink" title="首先，让我们先了解下今天要学习的东西。"></a>首先，让我们先了解下今天要学习的东西。</h4><blockquote><p>网页蓝牙：通过渐进式 Web 应用（Progressive Web Apps）技术，你可以开发成熟的 Web 应用。 得益于大量新规范和新功能，以前需要在本机执行的应用，现在可以基于 Web 实现。 不过迄今为止，与硬件设备的交互仍然是遥不可及。 过去几年在浏览器中实现的新规范和功能的数量都是惊人的，我们已经有了处理3D的规范，例如WebGL和即将推出的WebGPU，我们可以流式传输和生成音频，观看视频并将网络摄像头用作输入设备，其实我们还可以使用WebAssembly以几乎原生的速度运行代码。</p><p>长期以来我们一直试图解决的一个问题：网络非常适合与服务器通信，但不适合与设备通信。</p></blockquote><hr><blockquote><p>Micro:bit是由英国BBC公司推出的面向青少年编程教育的微型计算机，这一块小板子上集成了加速度传感器，磁力传感器，两个可编程按钮，25个单色led，蓝牙等常用传感器设备，采用micro usb口供电，可外接电池盒，在底部还有多个环孔连接器，可用于控制外接设备。</p><p>别看它面积小，但功能都很齐全哦</p></blockquote><h2 id="一、开始的准备工作"><a href="#一、开始的准备工作" class="headerlink" title="一、开始的准备工作"></a>一、开始的准备工作</h2><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611164658.png" alt=""></p><h2 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h2><ol><li><p>先将板子通过USB口接到电脑上。</p></li><li><p>到官网下载测试程序。</p><p><a href="https://makecode.microbit.org/v0/89975-20684-84568-20127" target="_blank" rel="noopener">https://makecode.microbit.org/v0/89975-20684-84568-20127</a></p><p>下好程序后，将程序拖入到板子的盘里。这时候，程序会消失，不用担心，这是正常现象，板子上会滚动显示 “Hi !”这表明连接本机成功。</p><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611163637.png" alt=""></p></li></ol><h2 id="三、用程序实现蓝牙控制板子的断和连"><a href="#三、用程序实现蓝牙控制板子的断和连" class="headerlink" title="三、用程序实现蓝牙控制板子的断和连"></a>三、用程序实现蓝牙控制板子的断和连</h2><ul><li>相关程序，这里面有用到后面几节课的读写功能。</li></ul><pre class=" language-javascript"><code class="language-javascript">          <span class="token keyword">var</span> selected_device<span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">// 保存用户选择的蓝牙设备</span>          <span class="token keyword">var</span> connected_server<span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//在第二课基础上添加的变量，保存用户连接的蓝牙设备</span>          <span class="token keyword">var</span> connected<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//在第三课基础上添加的变量，保存电脑蓝牙的当前连接设备</span>          <span class="token comment" spellcheck="true">//在第5课上添加以下内容</span>      <span class="token comment" spellcheck="true">// presence of services and characteristics </span>      <span class="token keyword">var</span> has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> has_accelerometer_data <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> has_led_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> has_led_matrix_state <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> has_device_information_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> has_model_name_string <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> </code></pre><pre class=" language-javascript"><code class="language-javascript">     <span class="token comment" spellcheck="true">// service UUIDs </span>     ACCELEROMETER_SERVICE <span class="token operator">=</span> <span class="token string">'e95d0753-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>      LED_SERVICE <span class="token operator">=</span> <span class="token string">'e95dd91d-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>      DEVICE_INFORMATION_SERVICE <span class="token operator">=</span> <span class="token string">'0000180a-0000-1000-8000-00805f9b34fb'</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// characteristic UUIDs </span>     ACCELEROMETER_DATA <span class="token operator">=</span> <span class="token string">'e95dca4b-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>      LED_MATRIX_STATE  <span class="token operator">=</span> <span class="token string">'e95d7b77-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>      MODEL_NUMBER_STRING <span class="token operator">=</span> <span class="token string">'00002a24-0000-1000-8000-00805f9b34fb'</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// cached characteristics var accelerometer_data; </span>      <span class="token keyword">var</span> led_matrix_state<span class="token punctuation">;</span>       <span class="token keyword">var</span> model_number_string<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//</span>       <span class="token keyword">var</span> service_count<span class="token punctuation">;</span>       <span class="token keyword">var</span> services_discovered<span class="token punctuation">;</span>       <span class="token keyword">var</span> characteristics_discovered<span class="token punctuation">;</span>         <span class="token keyword">var</span> characteristic_count <span class="token punctuation">;</span>           <span class="token keyword">function</span> <span class="token function">discoverOrdisconnectDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//在第四课基础上添加的函数</span>          <span class="token punctuation">{</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverDevicesOrDisconnect"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>connected<span class="token punctuation">)</span>                  <span class="token function">discoverDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">else</span>              <span class="token punctuation">{</span>                  selected_device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span><span class="token function">disconnext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">onDisconnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                   <span class="token comment" spellcheck="true">//在第四课基础上添加的函数</span>          <span class="token punctuation">{</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"onDisconnected"</span><span class="token punctuation">)</span>              <span class="token function">resetUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">discoverDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>               <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>acceptAllDevices<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>              optionalServices<span class="token punctuation">:</span> <span class="token punctuation">[</span>DEVICE_INFORMATION_SERVICE<span class="token punctuation">,</span> ACCELEROMETER_SERVICE<span class="token punctuation">,</span> LED_SERVICE<span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">//在第5节课上添加</span>                <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//发现所有周边蓝牙设备</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverDevices"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//  var options = {acceptAllDevices:true}           //发现所有周边蓝牙设备</span>              navigator<span class="token punctuation">.</span>bluetooth<span class="token punctuation">.</span><span class="token function">requestDevice</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>device <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Name:        '</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Id:          '</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Connected:   '</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>                  selected_device <span class="token operator">=</span> device<span class="token punctuation">;</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected_device<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>                  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'ERROR:'</span> <span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ERROR:'</span> <span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"connecting"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              selected_device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>                  <span class="token keyword">function</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span>                            <span class="token comment" spellcheck="true">//表示连接成功</span>                  <span class="token punctuation">{</span>                      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Connected to"</span> <span class="token operator">+</span> server<span class="token punctuation">.</span>device<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Connected="</span> <span class="token operator">+</span> server<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>                      selected_device<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'gattserverdisconnected'</span><span class="token punctuation">,</span>onDisconnected<span class="token punctuation">)</span><span class="token punctuation">;</span>                      connected_server <span class="token operator">=</span> server<span class="token punctuation">;</span>                      <span class="token function">discoverSvcsAndChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">,</span>                  <span class="token keyword">function</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                              <span class="token comment" spellcheck="true">//表示连接失败</span>                  <span class="token punctuation">{</span>                      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ERROR:could not connct-"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"ERROR:could not connct-"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>              <span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>          <span class="token punctuation">{</span>              connected<span class="token operator">=</span>status<span class="token punctuation">;</span>              document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'status_connected'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>status<span class="token punctuation">;</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>status<span class="token operator">==</span><span class="token boolean">true</span><span class="token punctuation">)</span>              <span class="token punctuation">{</span>                  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn_scan'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"Disconnect"</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>              <span class="token keyword">else</span>              <span class="token punctuation">{</span>                  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn_scan'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"Discover Devices"</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">resetUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>              <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">discoverSvcsAndChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//在第5课基础上添加的函数</span>      <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverSvcsAndChars server="</span> <span class="token operator">+</span> connected_server<span class="token punctuation">)</span><span class="token punctuation">;</span>           connected_server<span class="token punctuation">.</span><span class="token function">getPrimaryServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>services <span class="token operator">=</span><span class="token operator">></span>           <span class="token punctuation">{</span>                      has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                      has_led_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                      has_device_information_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                   services_discovered <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                      service_count <span class="token operator">=</span> services<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Got "</span> <span class="token operator">+</span> service_count <span class="token operator">+</span> <span class="token string">" services"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   services<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>service <span class="token operator">=</span><span class="token operator">></span>                   <span class="token punctuation">{</span>                           <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> ACCELEROMETER_SERVICE<span class="token punctuation">)</span>                      <span class="token punctuation">{</span>                                has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                          <span class="token punctuation">}</span>                           <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> LED_SERVICE<span class="token punctuation">)</span>                       <span class="token punctuation">{</span>                                has_led_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                           <span class="token punctuation">}</span>                           <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> DEVICE_INFORMATION_SERVICE<span class="token punctuation">)</span>                       <span class="token punctuation">{</span>                                has_device_information_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                           <span class="token punctuation">}</span>                           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Getting Characteristics for service '</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                           service<span class="token punctuation">.</span><span class="token function">getCharacteristics</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>characteristics <span class="token operator">=</span><span class="token operator">></span>                       <span class="token punctuation">{</span>                                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Service: '</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                                services_discovered<span class="token operator">++</span><span class="token punctuation">;</span>                               characteristics_discovered <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                                characteristic_count <span class="token operator">=</span> characteristics<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                                characteristics<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>characteristic <span class="token operator">=</span><span class="token operator">></span>                           <span class="token punctuation">{</span>                                     characteristics_discovered<span class="token operator">++</span><span class="token punctuation">;</span>                                     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'>> Characteristic: '</span> <span class="token operator">+</span> characteristic<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                                     <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> ACCELEROMETER_DATA<span class="token punctuation">)</span>                              <span class="token punctuation">{</span>                                          accelerometer_data <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                          has_accelerometer_data <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                     <span class="token punctuation">}</span>                                     <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> LED_MATRIX_STATE<span class="token punctuation">)</span>                               <span class="token punctuation">{</span>                                          led_matrix_state <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                          has_led_matrix_state <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                     <span class="token punctuation">}</span>                                     <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> MODEL_NUMBER_STRING<span class="token punctuation">)</span>                               <span class="token punctuation">{</span>                                          model_number_string <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                          has_model_name_string <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                     <span class="token punctuation">}</span>                                     <span class="token keyword">if</span> <span class="token punctuation">(</span>services_discovered <span class="token operator">==</span> service_count <span class="token operator">&amp;&amp;</span> characteristics_discovered <span class="token operator">==</span> characteristic_count<span class="token punctuation">)</span>                               <span class="token punctuation">{</span>                                          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"FINISHED DISCOVERY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                  <span class="token comment" spellcheck="true">// setDiscoveryStatus(true);       </span>                                  <span class="token comment" spellcheck="true">//setDiscoveryStatus(true);                  </span>                              <span class="token punctuation">}</span>                                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                           <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span></code></pre><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611165124.png" alt=""></p><ul><li><p>测试</p><p>打开测试网址，有以下效果即成功。</p><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611162316.png" alt=""></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
