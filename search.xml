<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>读写特性</title>
      <link href="/posts/52094.html"/>
      <url>/posts/52094.html</url>
      
        <content type="html"><![CDATA[<h2 id="1、通过读写特性读取BBC板名称"><a href="#1、通过读写特性读取BBC板名称" class="headerlink" title="1、通过读写特性读取BBC板名称"></a>1、通过读写特性读取BBC板名称</h2><h2 id="2、控制LED灯的显示"><a href="#2、控制LED灯的显示" class="headerlink" title="2、控制LED灯的显示"></a>2、控制LED灯的显示</h2><h2 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>        var    selected_device;        var    connected_server;        var    connected=false;        var    services_discovered=false;                 //在第5课上添加以下内容        // presence of services and characteristics         var has_accelerometer_service = false;         var has_accelerometer_data = false;         var has_led_service = false;        var has_led_matrix_state = false;         var has_device_information_service = false;         var has_model_name_string = false;         var has_temperature_service =false;    //温度        var has_tem_temperature = false;           // service UUIDs        ACCELEROMETER_SERVICE = 'e95d0753-251d-470a-a062-fa1922dfa9a8';        LED_SERVICE = 'e95dd91d-251d-470a-a062-fa1922dfa9a8';        DEVICE_INFORMATION_SERVICE = '0000180a-0000-1000-8000-00805f9b34fb';       TEMPERATURE_SERVICE = 'e95d6100-251d-470a-a062-fa1922dfa9a8';        // characteristic UUIDs        ACCELEROMETER_DATA = 'e95dca4b-251d-470a-a062-fa1922dfa9a8';        LED_MATRIX_STATE  = 'e95d7b77-251d-470a-a062-fa1922dfa9a8';        MODEL_NUMBER_STRING = '00002a24-0000-1000-8000-00805f9b34fb';       TEM_TEMPERATURE = 'e95d1b25-251d-470a-a062-fa1922dfa9a8';         // cached characteristics var accelerometer_data;        var led_matrix_state;         var model_number_string;        var accelerometer_data;        var tem_temperature;              //        var service_count;         var services_discovered;         var characteristics_discovered;           var characteristic_count ;                        function discoverOrdisconnectDevices()        {            console.log("discoverOrdisconnectDevices");            if(!connected)            discoverDevices();            else            {                selected_device.gatt.disconnect();            }        }</code></pre><p>​        </p><pre class=" language-javascript"><code class="language-javascript">    <span class="token keyword">function</span> <span class="token function">onDisconnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"onDisconnected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">resetUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//function input.temperature(): number;</span>    <span class="token keyword">function</span> <span class="token function">discoverDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverDevices"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>acceptAllDevices<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>            optionalServices<span class="token punctuation">:</span> <span class="token punctuation">[</span>DEVICE_INFORMATION_SERVICE<span class="token punctuation">,</span> ACCELEROMETER_SERVICE<span class="token punctuation">,</span> LED_SERVICE<span class="token punctuation">,</span>TEMPERATURE_SERVICE<span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">//在第5节课上添加</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//发现所有周边蓝牙设备</span>        navigator<span class="token punctuation">.</span>bluetooth<span class="token punctuation">.</span><span class="token function">requestDevice</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>device <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Name:'</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Id:'</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Connected:'</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>            selected_device <span class="token operator">=</span> device<span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected_device<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'ERROR'</span> <span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ERROR'</span> <span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           <span class="token keyword">function</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"connecting"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        selected_device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>            <span class="token keyword">function</span> <span class="token punctuation">(</span>server<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Connected to"</span> <span class="token operator">+</span> server<span class="token punctuation">.</span>device<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Connected "</span> <span class="token operator">+</span> server<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>                selected_device<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'gattserverdisconnected'</span><span class="token punctuation">,</span>onDisconnected<span class="token punctuation">)</span><span class="token punctuation">;</span>                connected_server <span class="token operator">=</span>server<span class="token punctuation">;</span>                <span class="token function">discoverSvcsAndChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//在第5课基础上添加的函数</span>                <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ERROR:could not connct-"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"ERROR:could not connct-"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        connected<span class="token operator">=</span>status<span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'status_connected'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> status<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>status<span class="token operator">==</span><span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn_scan'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"Disconnect"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn_scan'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"Discover Devices"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">setDiscoveryStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        services_discovered<span class="token operator">=</span>status<span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'status_discovered'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>status<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">resetUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">discoverSvcsAndChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//在第5课基础上添加的函数</span>    <span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverSvcsAndChars server="</span> <span class="token operator">+</span> connected_server<span class="token punctuation">)</span><span class="token punctuation">;</span>         connected_server<span class="token punctuation">.</span><span class="token function">getPrimaryServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>services <span class="token operator">=</span><span class="token operator">></span>         <span class="token punctuation">{</span>                    has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    has_led_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    has_device_information_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                 has_temperature_service<span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                services_discovered <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    service_count <span class="token operator">=</span> services<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Got "</span> <span class="token operator">+</span> service_count <span class="token operator">+</span> <span class="token string">" services"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 services<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>service <span class="token operator">=</span><span class="token operator">></span>                 <span class="token punctuation">{</span>                         <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> ACCELEROMETER_SERVICE<span class="token punctuation">)</span>                    <span class="token punctuation">{</span>                              has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                       <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> LED_SERVICE<span class="token punctuation">)</span>                     <span class="token punctuation">{</span>                              has_led_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                         <span class="token punctuation">}</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> DEVICE_INFORMATION_SERVICE<span class="token punctuation">)</span>                     <span class="token punctuation">{</span>                              has_device_information_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                         <span class="token punctuation">}</span>                     <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> TEMPERATURE_SERVICE<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//温度</span>                    <span class="token punctuation">{</span>                              has_temperature_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                         <span class="token punctuation">}</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Getting Characteristics for service '</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                         service<span class="token punctuation">.</span><span class="token function">getCharacteristics</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>characteristics <span class="token operator">=</span><span class="token operator">></span>                     <span class="token punctuation">{</span>                              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Service: '</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                              services_discovered<span class="token operator">++</span><span class="token punctuation">;</span>                             characteristics_discovered <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                              characteristic_count <span class="token operator">=</span> characteristics<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                              characteristics<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>characteristic <span class="token operator">=</span><span class="token operator">></span>                         <span class="token punctuation">{</span>                                   characteristics_discovered<span class="token operator">++</span><span class="token punctuation">;</span>                                   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'>> Characteristic: '</span> <span class="token operator">+</span> characteristic<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                                   <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> ACCELEROMETER_DATA<span class="token punctuation">)</span>                            <span class="token punctuation">{</span>                                        accelerometer_data <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                        has_accelerometer_data <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                   <span class="token punctuation">}</span>                                  <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> LED_MATRIX_STATE<span class="token punctuation">)</span>                             <span class="token punctuation">{</span>                                        led_matrix_state <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                        has_led_matrix_state <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                   <span class="token punctuation">}</span>                                   <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> MODEL_NUMBER_STRING<span class="token punctuation">)</span>                             <span class="token punctuation">{</span>                                        model_number_string <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                        has_model_name_string <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                   <span class="token punctuation">}</span>                            <span class="token keyword">if</span><span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> TEM_TEMPERATURE<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//温度</span>                            <span class="token punctuation">{</span>                                tem_temperature <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                 has_tem_temperature <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                                 <span class="token keyword">if</span> <span class="token punctuation">(</span>services_discovered <span class="token operator">==</span> service_count <span class="token operator">&amp;&amp;</span> characteristics_discovered <span class="token operator">==</span> characteristic_count<span class="token punctuation">)</span>                             <span class="token punctuation">{</span>                                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"FINISHED DISCOVERY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                 <span class="token function">setDiscoveryStatus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                       <span class="token comment" spellcheck="true">//setDiscoveryStatus(true);                  </span>                            <span class="token punctuation">}</span>                            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token keyword">function</span> <span class="token function">randomLEDs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//第6课上添加</span>    <span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"randomLEDs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">// state validation   </span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>connected<span class="token punctuation">)</span>         <span class="token punctuation">{</span>                 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: Discover and connect to a device before using this function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">return</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>services_discovered<span class="token punctuation">)</span>         <span class="token punctuation">{</span>                 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: Service discovery has not yet completed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">return</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has_led_service<span class="token punctuation">)</span>         <span class="token punctuation">{</span>                 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: The connected device does not contain the LED service"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">return</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has_led_matrix_state<span class="token punctuation">)</span>         <span class="token punctuation">{</span>                  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: The connected device does not contain the LED matrix state characteristic"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">return</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           <span class="token keyword">var</span> led_array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// Math.random():0~1  Math.floor(x):返回小于等于x的最大整数</span>        led_array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>          led_array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>           led_array<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>           led_array<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">;</span>           led_array<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*led_array[0] = 31;          led_array[1] = 17;           led_array[2] = 17;           led_array[3] = 17;           led_array[4] = 31; */</span>        <span class="token keyword">var</span> led_matrix_data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>led_array<span class="token punctuation">)</span><span class="token punctuation">;</span>         led_matrix_state<span class="token punctuation">.</span><span class="token function">writeValue</span><span class="token punctuation">(</span>led_matrix_data<span class="token punctuation">.</span>buffer<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>_ <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>               console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'LED matrix state changed'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>               console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">return</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token keyword">function</span> <span class="token function">readModelNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"readModelNumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">// state validation   </span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>connected<span class="token punctuation">)</span>         <span class="token punctuation">{</span>                 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: Discover and connect to a device before using this function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">return</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>services_discovered<span class="token punctuation">)</span>         <span class="token punctuation">{</span>                 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: Service discovery has not yet completed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">return</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has_device_information_service<span class="token punctuation">)</span>         <span class="token punctuation">{</span>                 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: The connected device does not contain the device information service"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">return</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has_model_name_string<span class="token punctuation">)</span>         <span class="token punctuation">{</span>                 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: The connected device does not contain the model name string characteristic"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">return</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           model_number_string<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>               data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>               model_number_string <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextDecoder</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>model_number_string<span class="token punctuation">)</span><span class="token punctuation">;</span>               document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"model_number"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> model_number_string<span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">return</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>h2<span class="token operator">></span>  Status    <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>table border<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>tr<span class="token operator">></span>                <span class="token operator">&lt;</span>td<span class="token operator">></span>     <span class="token operator">&lt;</span>b<span class="token operator">></span>Connected<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span>   <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                <span class="token operator">&lt;</span>td<span class="token operator">></span>     <span class="token operator">&lt;</span>b<span class="token operator">></span>Service Discovery Completed<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span>   <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>tr<span class="token operator">></span>                <span class="token operator">&lt;</span>td id<span class="token operator">=</span><span class="token string">"status_connected"</span><span class="token operator">></span> <span class="token boolean">false</span> <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                <span class="token operator">&lt;</span>td id<span class="token operator">=</span><span class="token string">"status_discovered"</span><span class="token operator">></span> <span class="token boolean">false</span> <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span>        <span class="token operator">&lt;</span>hr<span class="token operator">></span>    <span class="token operator">&lt;</span>h2<span class="token operator">></span>        Device Discovery or Disconnect    <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>    <span class="token operator">&lt;</span>button id <span class="token operator">=</span> <span class="token string">"btn_scan"</span> onclick<span class="token operator">=</span><span class="token string">"discoverOrdisconnectDevices()"</span><span class="token operator">></span>Start scan<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>hr<span class="token operator">></span>    <span class="token operator">&lt;</span>h2<span class="token operator">></span>Reading and Writing<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>    <span class="token operator">&lt;</span>h3<span class="token operator">></span>Write Characteristic <span class="token operator">-</span> Randomise Lights<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>      <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"btn_write"</span> onclick<span class="token operator">=</span><span class="token string">"randomLEDs()"</span><span class="token operator">></span>Randomise LEDs<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>h3<span class="token operator">></span>Read Characteristic <span class="token operator">-</span> Model number<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>      <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"btn_read"</span> onclick<span class="token operator">=</span><span class="token string">"readModelNumber()"</span><span class="token operator">></span>Read Model number<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>     <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"model_number"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>hr<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><p>打开网页我们会发现以下效果：</p><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200621124548.png" alt=""></p><p>当点击Read Model number时，会显示板子的型号。</p><p>当点击Readomise LEDs时，会改变板子上的LED灯的显示。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>服务特性</title>
      <link href="/posts/11838.html"/>
      <url>/posts/11838.html</url>
      
        <content type="html"><![CDATA[<h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>html<span class="token operator">></span>    <span class="token operator">&lt;</span>head<span class="token operator">></span>        <span class="token operator">&lt;</span>script<span class="token operator">></span>            <span class="token keyword">var</span> selected_device<span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">// 保存用户选择的蓝牙设备</span>            <span class="token keyword">var</span> connected_server<span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//在第二课基础上添加的变量，保存用户连接的蓝牙设备</span>            <span class="token keyword">var</span> connected<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//在第三课基础上添加的变量，保存电脑蓝牙的当前连接设备</span>            <span class="token keyword">var</span> services_discovered <span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//在第五节课上添加</span>            <span class="token comment" spellcheck="true">//在第5课上添加以下内容</span>            <span class="token comment" spellcheck="true">// presence of services and characteristics </span>            <span class="token keyword">var</span> has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> has_accelerometer_data <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> has_led_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> has_led_matrix_state <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> has_device_information_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> has_model_number_string <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> has_temperature_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> has_temperature <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// service UUIDs </span>            ACCELEROMETER_SERVICE <span class="token operator">=</span> <span class="token string">'e95d0753-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>             LED_SERVICE <span class="token operator">=</span> <span class="token string">'e95dd91d-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>             DEVICE_INFORMATION_SERVICE <span class="token operator">=</span> <span class="token string">'0000180a-0000-1000-8000-00805f9b34fb'</span><span class="token punctuation">;</span>            TEMPERATURE_SERVICE <span class="token operator">=</span> <span class="token string">'e95d6100-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// characteristic UUIDs </span>            ACCELEROMETER_DATA <span class="token operator">=</span> <span class="token string">'e95dca4b-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>             LED_MATRIX_STATE  <span class="token operator">=</span> <span class="token string">'e95d7b77-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>             MODEL_NUMBER_STRING <span class="token operator">=</span> <span class="token string">'00002a24-0000-1000-8000-00805f9b34fb'</span><span class="token punctuation">;</span>             TEMPERATURE<span class="token operator">=</span><span class="token string">'e95d9250-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// cached characteristics var accelerometer_data; </span>            <span class="token keyword">var</span> accelerometer_data<span class="token punctuation">;</span>            <span class="token keyword">var</span> led_matrix_state<span class="token punctuation">;</span>             <span class="token keyword">var</span> model_number_string<span class="token punctuation">;</span>            <span class="token keyword">var</span> temperature<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//</span>            <span class="token keyword">var</span> service_count<span class="token punctuation">;</span>            <span class="token keyword">var</span> services_discovered<span class="token punctuation">;</span>            <span class="token keyword">var</span> characteristics_discovered<span class="token punctuation">;</span>              <span class="token keyword">var</span> characteristic_count <span class="token punctuation">;</span>             <span class="token keyword">function</span> <span class="token function">discoverDevicesOrDisconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//在第四课基础上添加的函数</span>            <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverDevicesOrDisconnect"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"。。。"</span><span class="token punctuation">)</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>connected<span class="token punctuation">)</span>                    <span class="token function">discoverDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">else</span>                <span class="token punctuation">{</span>                    selected_device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">onDisconnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                   <span class="token comment" spellcheck="true">//在第四课基础上添加的函数</span>            <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"onDisconnected"</span><span class="token punctuation">)</span>                <span class="token function">resetUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">discoverDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverDevices"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//consol.log 控制台打印输出</span>                <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>acceptAllDevices<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                           optionalServices<span class="token punctuation">:</span> <span class="token punctuation">[</span>DEVICE_INFORMATION_SERVICE<span class="token punctuation">,</span> ACCELEROMETER_SERVICE<span class="token punctuation">,</span> LED_SERVICE<span class="token punctuation">,</span>TEMPERATURE_SERVICE<span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">//在第5节课上添加</span>                              <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//发现所有周边蓝牙设备</span>                navigator<span class="token punctuation">.</span>bluetooth<span class="token punctuation">.</span><span class="token function">requestDevice</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">//Navigator对象，包含有关游览器的信息</span>                <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>device <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Name:        '</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Id:          '</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Connected:   '</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>                    selected_device <span class="token operator">=</span> device<span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected_device<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token comment" spellcheck="true">//在第二课基础上添加的函数</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'ERROR:'</span> <span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ERROR:'</span> <span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"connecting"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                selected_device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>                    <span class="token keyword">function</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span>                            <span class="token comment" spellcheck="true">//表示连接成功</span>                    <span class="token punctuation">{</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Connected to"</span> <span class="token operator">+</span> server<span class="token punctuation">.</span>device<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Connected="</span> <span class="token operator">+</span> server<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>                        selected_device<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'gattserverdisconnected'</span><span class="token punctuation">,</span>onDisconnected<span class="token punctuation">)</span><span class="token punctuation">;</span>                        connected_server <span class="token operator">=</span> server<span class="token punctuation">;</span>                        <span class="token function">discoverSvcsAndChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token keyword">function</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                              <span class="token comment" spellcheck="true">//表示连接失败</span>                    <span class="token punctuation">{</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ERROR:could not connct-"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"ERROR:could not connct-"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                connected<span class="token operator">=</span>status<span class="token punctuation">;</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'status_connected'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>status<span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>status<span class="token operator">==</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn_scan'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"Disconnect"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">else</span>                <span class="token punctuation">{</span>                    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn_scan'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"Discover Devices"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">setDiscoveryStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                services_discovered <span class="token operator">=</span> status<span class="token punctuation">;</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'status_discovered'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> status<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">resetUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">setDiscoveryStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">discoverSvcsAndChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//在第5课基础上添加的函数</span>            <span class="token punctuation">{</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverSvcsAndChars server="</span> <span class="token operator">+</span> connected_server<span class="token punctuation">)</span><span class="token punctuation">;</span>                 connected_server<span class="token punctuation">.</span><span class="token function">getPrimaryServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>services <span class="token operator">=</span><span class="token operator">></span>                 <span class="token punctuation">{</span>                            has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                            has_led_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                            has_device_information_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                         has_temperature_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        services_discovered <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                            service_count <span class="token operator">=</span> services<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Got "</span> <span class="token operator">+</span> service_count <span class="token operator">+</span> <span class="token string">" services"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         services<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>service <span class="token operator">=</span><span class="token operator">></span>                         <span class="token punctuation">{</span>                                 <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> ACCELEROMETER_SERVICE<span class="token punctuation">)</span>                            <span class="token punctuation">{</span>                                      has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                 <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> LED_SERVICE<span class="token punctuation">)</span>                             <span class="token punctuation">{</span>                                      has_led_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                 <span class="token punctuation">}</span>                                 <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> DEVICE_INFORMATION_SERVICE<span class="token punctuation">)</span>                             <span class="token punctuation">{</span>                                      has_device_information_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                 <span class="token punctuation">}</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> TEMPERATURE_SERVICE<span class="token punctuation">)</span>                             <span class="token punctuation">{</span>                                      has_temperature_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                 <span class="token punctuation">}</span>                                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Getting Characteristics for service '</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                                 service<span class="token punctuation">.</span><span class="token function">getCharacteristics</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>characteristics <span class="token operator">=</span><span class="token operator">></span>                             <span class="token punctuation">{</span>                                      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Service: '</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                                      services_discovered<span class="token operator">++</span><span class="token punctuation">;</span>                                     characteristics_discovered <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                                      characteristic_count <span class="token operator">=</span> characteristics<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                                      characteristics<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>characteristic <span class="token operator">=</span><span class="token operator">></span>                                 <span class="token punctuation">{</span>                                           characteristics_discovered<span class="token operator">++</span><span class="token punctuation">;</span>                                           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'>> Characteristic: '</span> <span class="token operator">+</span> characteristic<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                                           <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> ACCELEROMETER_DATA<span class="token punctuation">)</span>                                    <span class="token punctuation">{</span>                                                accelerometer_data <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                                has_accelerometer_data <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                           <span class="token punctuation">}</span>                                           <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> LED_MATRIX_STATE<span class="token punctuation">)</span>                                     <span class="token punctuation">{</span>                                                led_matrix_state <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                                has_led_matrix_state <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                           <span class="token punctuation">}</span>                                           <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> MODEL_NUMBER_STRING<span class="token punctuation">)</span>                                     <span class="token punctuation">{</span>                                                model_number_string <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                                has_model_number_string <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                           <span class="token punctuation">}</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> TEMPERATURE<span class="token punctuation">)</span>                                     <span class="token punctuation">{</span>                                                temperature <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                                has_temperature <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                           <span class="token punctuation">}</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>services_discovered <span class="token operator">==</span> service_count <span class="token operator">&amp;&amp;</span> characteristics_discovered <span class="token operator">==</span> characteristic_count<span class="token punctuation">)</span>                                     <span class="token punctuation">{</span>                                                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"FINISHED DISCOVERY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                         <span class="token function">setDiscoveryStatus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                             <span class="token comment" spellcheck="true">//  setDiscoveryStatus(true);                  </span>                                    <span class="token punctuation">}</span>                                      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">function</span> <span class="token function">randomLEDs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//第6课上添加</span>            <span class="token punctuation">{</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"randomLEDs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment" spellcheck="true">// state validation   </span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>connected<span class="token punctuation">)</span>                 <span class="token punctuation">{</span>                         <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: Discover and connect to a device before using this function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token keyword">return</span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span>                   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>services_discovered<span class="token punctuation">)</span>                 <span class="token punctuation">{</span>                         <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: Service discovery has not yet completed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token keyword">return</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>                   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has_led_service<span class="token punctuation">)</span>                 <span class="token punctuation">{</span>                         <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: The connected device does not contain the LED service"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token keyword">return</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>                   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has_led_matrix_state<span class="token punctuation">)</span>                 <span class="token punctuation">{</span>                          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: The connected device does not contain the LED matrix state characteristic"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                          <span class="token keyword">return</span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span>                   <span class="token keyword">var</span> led_array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                   <span class="token keyword">var</span> led_array2 <span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// Math.random():0~1  Math.floor(x):返回小于等于x的最大整数</span>                    led_array<span class="token operator">=</span>led_array2<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    i<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">/*led_array[0] = led_array2[i][1];                    led_array[1] = led_array2[i][1];                    led_array[2] = led_array2[i][2];                    led_array[3] = led_array2[i][3];                    led_array[4] = led_array2[i][4];*/</span>               <span class="token comment" spellcheck="true">/* led_array[0] = 10;//Math.floor(Math.random() * 32);                  led_array[1] = 21;                   led_array[2] = 17;                   led_array[3] = 10;                   led_array[4] = 4; */</span>                <span class="token keyword">var</span> led_matrix_data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>led_array<span class="token punctuation">)</span><span class="token punctuation">;</span>                 led_matrix_state<span class="token punctuation">.</span><span class="token function">writeValue</span><span class="token punctuation">(</span>led_matrix_data<span class="token punctuation">.</span>buffer<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>_ <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'LED matrix state changed'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token punctuation">}</span><span class="token punctuation">)</span>                  <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">return</span><span class="token punctuation">;</span>                      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>body<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span>Web Bluetooth<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>            Status  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 显示蓝牙状态<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>table border<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>tr<span class="token operator">></span>                <span class="token operator">&lt;</span>td<span class="token operator">></span>    <span class="token operator">&lt;</span>b<span class="token operator">></span>Connected<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                <span class="token operator">&lt;</span>td<span class="token operator">></span>    <span class="token operator">&lt;</span>b<span class="token operator">></span>Service Discovery Completed<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>tr<span class="token operator">></span>                <span class="token operator">&lt;</span>td id<span class="token operator">=</span><span class="token string">"status_connected"</span><span class="token operator">></span>False<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                <span class="token operator">&lt;</span>td id<span class="token operator">=</span><span class="token string">"status_discovered"</span><span class="token operator">></span>False<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span>        <span class="token operator">&lt;</span>hr<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>Device Discovery Or Disconnect<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 扫描<span class="token operator">/</span>发现蓝牙设备 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"btn_scan"</span> onclick<span class="token operator">=</span><span class="token string">"discoverDevicesOrDisconnect()"</span><span class="token operator">></span>            Discover Devices        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>hr<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>Reading and Writing<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span>Write Characteristic <span class="token operator">-</span> Randomise Lights<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>          <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"btn_write"</span> onclick<span class="token operator">=</span><span class="token string">"randomLEDs()"</span><span class="token operator">></span>Randomise LEDs<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>         <span class="token operator">&lt;</span>hr<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><p>这时打开网页蓝牙应显示以下效果</p><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200619172654.png" alt=""></p><p>右边可以看到相关服务及特性。</p><h3 id="温度服务"><a href="#温度服务" class="headerlink" title="温度服务"></a>温度服务</h3><p>由于BBC板里没有温度服务，需要我们去官网下载。</p><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200619173208.png" alt=""></p><p>添加相关程序 </p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>html<span class="token operator">></span>    <span class="token operator">&lt;</span>head<span class="token operator">></span>        <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span>    selected_device<span class="token punctuation">;</span>        <span class="token keyword">var</span>    connected_server<span class="token punctuation">;</span>        <span class="token keyword">var</span>    connected<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">var</span>    services_discovered<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">//在第5课上添加以下内容</span>        <span class="token comment" spellcheck="true">// presence of services and characteristics </span>        <span class="token keyword">var</span> has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> has_accelerometer_data <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> has_led_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> has_led_matrix_state <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> has_device_information_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> has_model_name_string <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> has_temperature_service <span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//温度</span>        <span class="token keyword">var</span> has_tem_temperature <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">// service UUIDs </span>       ACCELEROMETER_SERVICE <span class="token operator">=</span> <span class="token string">'e95d0753-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>        LED_SERVICE <span class="token operator">=</span> <span class="token string">'e95dd91d-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>        DEVICE_INFORMATION_SERVICE <span class="token operator">=</span> <span class="token string">'0000180a-0000-1000-8000-00805f9b34fb'</span><span class="token punctuation">;</span>       TEMPERATURE_SERVICE <span class="token operator">=</span> <span class="token string">'e95d6100-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// characteristic UUIDs </span>       ACCELEROMETER_DATA <span class="token operator">=</span> <span class="token string">'e95dca4b-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>        LED_MATRIX_STATE  <span class="token operator">=</span> <span class="token string">'e95d7b77-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>        MODEL_NUMBER_STRING <span class="token operator">=</span> <span class="token string">'00002a24-0000-1000-8000-00805f9b34fb'</span><span class="token punctuation">;</span>       TEM_TEMPERATURE <span class="token operator">=</span> <span class="token string">'e95d1b25-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">// cached characteristics var accelerometer_data; </span>       <span class="token keyword">var</span> led_matrix_state<span class="token punctuation">;</span>         <span class="token keyword">var</span> model_number_string<span class="token punctuation">;</span>        <span class="token keyword">var</span> accelerometer_data<span class="token punctuation">;</span>        <span class="token keyword">var</span> tem_temperature<span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//</span>        <span class="token keyword">var</span> service_count<span class="token punctuation">;</span>         <span class="token keyword">var</span> services_discovered<span class="token punctuation">;</span>         <span class="token keyword">var</span> characteristics_discovered<span class="token punctuation">;</span>           <span class="token keyword">var</span> characteristic_count <span class="token punctuation">;</span>                        <span class="token keyword">function</span> <span class="token function">discoverOrdisconnectDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverOrdisconnectDevices"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>connected<span class="token punctuation">)</span>            <span class="token function">discoverDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>            <span class="token punctuation">{</span>                selected_device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">onDisconnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"onDisconnected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">resetUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//function input.temperature(): number;</span>        <span class="token keyword">function</span> <span class="token function">discoverDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverDevices"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>acceptAllDevices<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                optionalServices<span class="token punctuation">:</span> <span class="token punctuation">[</span>DEVICE_INFORMATION_SERVICE<span class="token punctuation">,</span> ACCELEROMETER_SERVICE<span class="token punctuation">,</span> LED_SERVICE<span class="token punctuation">,</span>TEMPERATURE_SERVICE<span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">//在第5节课上添加</span>            <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//发现所有周边蓝牙设备</span>            navigator<span class="token punctuation">.</span>bluetooth<span class="token punctuation">.</span><span class="token function">requestDevice</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>device <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Name:'</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Id:'</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Connected:'</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>                selected_device <span class="token operator">=</span> device<span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected_device<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'ERROR'</span> <span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ERROR'</span> <span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               <span class="token keyword">function</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"connecting"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            selected_device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>                <span class="token keyword">function</span> <span class="token punctuation">(</span>server<span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Connected to"</span> <span class="token operator">+</span> server<span class="token punctuation">.</span>device<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Connected "</span> <span class="token operator">+</span> server<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>                    selected_device<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'gattserverdisconnected'</span><span class="token punctuation">,</span>onDisconnected<span class="token punctuation">)</span><span class="token punctuation">;</span>                    connected_server <span class="token operator">=</span>server<span class="token punctuation">;</span>                    <span class="token function">discoverSvcsAndChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//在第5课基础上添加的函数</span>                    <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ERROR:could not connct-"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"ERROR:could not connct-"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            connected<span class="token operator">=</span>status<span class="token punctuation">;</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'status_connected'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> status<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>status<span class="token operator">==</span><span class="token boolean">true</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn_scan'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"Disconnect"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span>            <span class="token punctuation">{</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn_scan'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"Discover Devices"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">setDiscoveryStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            services_discovered<span class="token operator">=</span>status<span class="token punctuation">;</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'status_discovered'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>status<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">resetUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">discoverSvcsAndChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//在第5课基础上添加的函数</span>        <span class="token punctuation">{</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverSvcsAndChars server="</span> <span class="token operator">+</span> connected_server<span class="token punctuation">)</span><span class="token punctuation">;</span>             connected_server<span class="token punctuation">.</span><span class="token function">getPrimaryServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>services <span class="token operator">=</span><span class="token operator">></span>             <span class="token punctuation">{</span>                        has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        has_led_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        has_device_information_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                     has_temperature_service<span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    services_discovered <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                        service_count <span class="token operator">=</span> services<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Got "</span> <span class="token operator">+</span> service_count <span class="token operator">+</span> <span class="token string">" services"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     services<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>service <span class="token operator">=</span><span class="token operator">></span>                     <span class="token punctuation">{</span>                             <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> ACCELEROMETER_SERVICE<span class="token punctuation">)</span>                        <span class="token punctuation">{</span>                                  has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                           <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> LED_SERVICE<span class="token punctuation">)</span>                         <span class="token punctuation">{</span>                                  has_led_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                             <span class="token punctuation">}</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> DEVICE_INFORMATION_SERVICE<span class="token punctuation">)</span>                         <span class="token punctuation">{</span>                                  has_device_information_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                             <span class="token punctuation">}</span>                         <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> TEMPERATURE_SERVICE<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//温度</span>                        <span class="token punctuation">{</span>                                  has_temperature_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                             <span class="token punctuation">}</span>                                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Getting Characteristics for service '</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                             service<span class="token punctuation">.</span><span class="token function">getCharacteristics</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>characteristics <span class="token operator">=</span><span class="token operator">></span>                         <span class="token punctuation">{</span>                                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Service: '</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                                  services_discovered<span class="token operator">++</span><span class="token punctuation">;</span>                                 characteristics_discovered <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                                  characteristic_count <span class="token operator">=</span> characteristics<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                                  characteristics<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>characteristic <span class="token operator">=</span><span class="token operator">></span>                             <span class="token punctuation">{</span>                                       characteristics_discovered<span class="token operator">++</span><span class="token punctuation">;</span>                                       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'>> Characteristic: '</span> <span class="token operator">+</span> characteristic<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                                       <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> ACCELEROMETER_DATA<span class="token punctuation">)</span>                                <span class="token punctuation">{</span>                                            accelerometer_data <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                            has_accelerometer_data <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                       <span class="token punctuation">}</span>                                      <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> LED_MATRIX_STATE<span class="token punctuation">)</span>                                 <span class="token punctuation">{</span>                                            led_matrix_state <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                            has_led_matrix_state <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                       <span class="token punctuation">}</span>                                       <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> MODEL_NUMBER_STRING<span class="token punctuation">)</span>                                 <span class="token punctuation">{</span>                                            model_number_string <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                            has_model_name_string <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                       <span class="token punctuation">}</span>                                <span class="token keyword">if</span><span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> TEM_TEMPERATURE<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//温度</span>                                <span class="token punctuation">{</span>                                    tem_temperature <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                     has_tem_temperature <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                     <span class="token keyword">if</span> <span class="token punctuation">(</span>services_discovered <span class="token operator">==</span> service_count <span class="token operator">&amp;&amp;</span> characteristics_discovered <span class="token operator">==</span> characteristic_count<span class="token punctuation">)</span>                                 <span class="token punctuation">{</span>                                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"FINISHED DISCOVERY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                     <span class="token function">setDiscoveryStatus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                           <span class="token comment" spellcheck="true">//setDiscoveryStatus(true);                  </span>                                <span class="token punctuation">}</span>                                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">randomLEDs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//第6课上添加</span>        <span class="token punctuation">{</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"randomLEDs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">// state validation   </span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>connected<span class="token punctuation">)</span>             <span class="token punctuation">{</span>                     <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: Discover and connect to a device before using this function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">return</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>services_discovered<span class="token punctuation">)</span>             <span class="token punctuation">{</span>                     <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: Service discovery has not yet completed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">return</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has_led_service<span class="token punctuation">)</span>             <span class="token punctuation">{</span>                     <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: The connected device does not contain the LED service"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">return</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has_led_matrix_state<span class="token punctuation">)</span>             <span class="token punctuation">{</span>                      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: The connected device does not contain the LED matrix state characteristic"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token keyword">return</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               <span class="token keyword">var</span> led_array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// Math.random():0~1  Math.floor(x):返回小于等于x的最大整数</span>            led_array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>              led_array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>               led_array<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>               led_array<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">;</span>               led_array<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*led_array[0] = 31;              led_array[1] = 17;               led_array[2] = 17;               led_array[3] = 17;               led_array[4] = 31; */</span>            <span class="token keyword">var</span> led_matrix_data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>led_array<span class="token punctuation">)</span><span class="token punctuation">;</span>             led_matrix_state<span class="token punctuation">.</span><span class="token function">writeValue</span><span class="token punctuation">(</span>led_matrix_data<span class="token punctuation">.</span>buffer<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>_ <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'LED matrix state changed'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">return</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">readModelNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token punctuation">{</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"readModelNumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">// state validation   </span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>connected<span class="token punctuation">)</span>             <span class="token punctuation">{</span>                     <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: Discover and connect to a device before using this function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">return</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>services_discovered<span class="token punctuation">)</span>             <span class="token punctuation">{</span>                     <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: Service discovery has not yet completed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">return</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has_device_information_service<span class="token punctuation">)</span>             <span class="token punctuation">{</span>                     <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: The connected device does not contain the device information service"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">return</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has_model_name_string<span class="token punctuation">)</span>             <span class="token punctuation">{</span>                     <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Error: The connected device does not contain the model name string characteristic"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">return</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               model_number_string<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                   data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>                   model_number_string <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextDecoder</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>model_number_string<span class="token punctuation">)</span><span class="token punctuation">;</span>                   document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"model_number"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> model_number_string<span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Error: '</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token keyword">return</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>body<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>  Status        <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>            <span class="token operator">&lt;</span>table border<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>tr<span class="token operator">></span>                    <span class="token operator">&lt;</span>td<span class="token operator">></span>     <span class="token operator">&lt;</span>b<span class="token operator">></span>Connected<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span>   <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                    <span class="token operator">&lt;</span>td<span class="token operator">></span>     <span class="token operator">&lt;</span>b<span class="token operator">></span>Service Discovery Completed<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span>   <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>                <span class="token operator">&lt;</span>tr<span class="token operator">></span>                    <span class="token operator">&lt;</span>td id<span class="token operator">=</span><span class="token string">"status_connected"</span><span class="token operator">></span> <span class="token boolean">false</span> <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                    <span class="token operator">&lt;</span>td id<span class="token operator">=</span><span class="token string">"status_discovered"</span><span class="token operator">></span> <span class="token boolean">false</span> <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span>            <span class="token operator">&lt;</span>hr<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>            Device Discovery or Disconnect        <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>button id <span class="token operator">=</span> <span class="token string">"btn_scan"</span> onclick<span class="token operator">=</span><span class="token string">"discoverOrdisconnectDevices()"</span><span class="token operator">></span>Start scan<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>hr<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>Reading and Writing<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span>Write Characteristic <span class="token operator">-</span> Randomise Lights<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>          <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"btn_write"</span> onclick<span class="token operator">=</span><span class="token string">"randomLEDs()"</span><span class="token operator">></span>Randomise LEDs<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>h3<span class="token operator">></span>Read Characteristic <span class="token operator">-</span> Model number<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>          <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"btn_read"</span> onclick<span class="token operator">=</span><span class="token string">"readModelNumber()"</span><span class="token operator">></span>Read Model number<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>         <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"model_number"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>hr<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><p>网页蓝牙就可以成功显示温度相关服务和特性了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网页如何显示连接蓝牙设备</title>
      <link href="/posts/13477.html"/>
      <url>/posts/13477.html</url>
      
        <content type="html"><![CDATA[<h4 id="首先，让我们先了解下今天要学习的东西。"><a href="#首先，让我们先了解下今天要学习的东西。" class="headerlink" title="首先，让我们先了解下今天要学习的东西。"></a>首先，让我们先了解下今天要学习的东西。</h4><blockquote><p>网页蓝牙：通过渐进式 Web 应用（Progressive Web Apps）技术，你可以开发成熟的 Web 应用。 得益于大量新规范和新功能，以前需要在本机执行的应用，现在可以基于 Web 实现。 不过迄今为止，与硬件设备的交互仍然是遥不可及。 过去几年在浏览器中实现的新规范和功能的数量都是惊人的，我们已经有了处理3D的规范，例如WebGL和即将推出的WebGPU，我们可以流式传输和生成音频，观看视频并将网络摄像头用作输入设备，其实我们还可以使用WebAssembly以几乎原生的速度运行代码。</p><p>长期以来我们一直试图解决的一个问题：网络非常适合与服务器通信，但不适合与设备通信。</p></blockquote><hr><blockquote><p>Micro:bit是由英国BBC公司推出的面向青少年编程教育的微型计算机，这一块小板子上集成了加速度传感器，磁力传感器，两个可编程按钮，25个单色led，蓝牙等常用传感器设备，采用micro usb口供电，可外接电池盒，在底部还有多个环孔连接器，可用于控制外接设备。</p><p>别看它面积小，但功能都很齐全哦</p></blockquote><h2 id="一、开始的准备工作"><a href="#一、开始的准备工作" class="headerlink" title="一、开始的准备工作"></a>一、开始的准备工作</h2><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611164658.png" alt=""></p><h2 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h2><ol><li><p>先将板子通过USB口接到电脑上。</p></li><li><p>到官网下载测试程序。</p><p><a href="https://makecode.microbit.org/v0/89975-20684-84568-20127" target="_blank" rel="noopener">https://makecode.microbit.org/v0/89975-20684-84568-20127</a></p><p>下好程序后，将程序拖入到板子的盘里。这时候，程序会消失，不用担心，这是正常现象，板子上会滚动显示 “Hi !”这表明连接本机成功。</p><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611163637.png" alt=""></p></li></ol><h2 id="三、用程序实现蓝牙控制板子的断和连"><a href="#三、用程序实现蓝牙控制板子的断和连" class="headerlink" title="三、用程序实现蓝牙控制板子的断和连"></a>三、用程序实现蓝牙控制板子的断和连</h2><ul><li>相关程序，这里面有用到后面几节课的读写功能。</li></ul><pre class=" language-javascript"><code class="language-javascript">          <span class="token keyword">var</span> selected_device<span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">// 保存用户选择的蓝牙设备</span>          <span class="token keyword">var</span> connected_server<span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//在第二课基础上添加的变量，保存用户连接的蓝牙设备</span>          <span class="token keyword">var</span> connected<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//在第三课基础上添加的变量，保存电脑蓝牙的当前连接设备</span>          <span class="token comment" spellcheck="true">//在第5课上添加以下内容</span>      <span class="token comment" spellcheck="true">// presence of services and characteristics </span>      <span class="token keyword">var</span> has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> has_accelerometer_data <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> has_led_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> has_led_matrix_state <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> has_device_information_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> has_model_name_string <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> </code></pre><pre class=" language-javascript"><code class="language-javascript">     <span class="token comment" spellcheck="true">// service UUIDs </span>     ACCELEROMETER_SERVICE <span class="token operator">=</span> <span class="token string">'e95d0753-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>      LED_SERVICE <span class="token operator">=</span> <span class="token string">'e95dd91d-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>      DEVICE_INFORMATION_SERVICE <span class="token operator">=</span> <span class="token string">'0000180a-0000-1000-8000-00805f9b34fb'</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// characteristic UUIDs </span>     ACCELEROMETER_DATA <span class="token operator">=</span> <span class="token string">'e95dca4b-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>      LED_MATRIX_STATE  <span class="token operator">=</span> <span class="token string">'e95d7b77-251d-470a-a062-fa1922dfa9a8'</span><span class="token punctuation">;</span>      MODEL_NUMBER_STRING <span class="token operator">=</span> <span class="token string">'00002a24-0000-1000-8000-00805f9b34fb'</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// cached characteristics var accelerometer_data; </span>      <span class="token keyword">var</span> led_matrix_state<span class="token punctuation">;</span>       <span class="token keyword">var</span> model_number_string<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//</span>       <span class="token keyword">var</span> service_count<span class="token punctuation">;</span>       <span class="token keyword">var</span> services_discovered<span class="token punctuation">;</span>       <span class="token keyword">var</span> characteristics_discovered<span class="token punctuation">;</span>         <span class="token keyword">var</span> characteristic_count <span class="token punctuation">;</span>           <span class="token keyword">function</span> <span class="token function">discoverOrdisconnectDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//在第四课基础上添加的函数</span>          <span class="token punctuation">{</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverDevicesOrDisconnect"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>connected<span class="token punctuation">)</span>                  <span class="token function">discoverDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">else</span>              <span class="token punctuation">{</span>                  selected_device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span><span class="token function">disconnext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">onDisconnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                   <span class="token comment" spellcheck="true">//在第四课基础上添加的函数</span>          <span class="token punctuation">{</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"onDisconnected"</span><span class="token punctuation">)</span>              <span class="token function">resetUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">discoverDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>               <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>acceptAllDevices<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>              optionalServices<span class="token punctuation">:</span> <span class="token punctuation">[</span>DEVICE_INFORMATION_SERVICE<span class="token punctuation">,</span> ACCELEROMETER_SERVICE<span class="token punctuation">,</span> LED_SERVICE<span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">//在第5节课上添加</span>                <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//发现所有周边蓝牙设备</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverDevices"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//  var options = {acceptAllDevices:true}           //发现所有周边蓝牙设备</span>              navigator<span class="token punctuation">.</span>bluetooth<span class="token punctuation">.</span><span class="token function">requestDevice</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>device <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Name:        '</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Id:          '</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Connected:   '</span> <span class="token operator">+</span> device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>                  selected_device <span class="token operator">=</span> device<span class="token punctuation">;</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected_device<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>                  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'ERROR:'</span> <span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ERROR:'</span> <span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"connecting"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              selected_device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>                  <span class="token keyword">function</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span>                            <span class="token comment" spellcheck="true">//表示连接成功</span>                  <span class="token punctuation">{</span>                      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Connected to"</span> <span class="token operator">+</span> server<span class="token punctuation">.</span>device<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Connected="</span> <span class="token operator">+</span> server<span class="token punctuation">.</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>                      selected_device<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'gattserverdisconnected'</span><span class="token punctuation">,</span>onDisconnected<span class="token punctuation">)</span><span class="token punctuation">;</span>                      connected_server <span class="token operator">=</span> server<span class="token punctuation">;</span>                      <span class="token function">discoverSvcsAndChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">,</span>                  <span class="token keyword">function</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                              <span class="token comment" spellcheck="true">//表示连接失败</span>                  <span class="token punctuation">{</span>                      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ERROR:could not connct-"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"ERROR:could not connct-"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>              <span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>          <span class="token punctuation">{</span>              connected<span class="token operator">=</span>status<span class="token punctuation">;</span>              document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'status_connected'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>status<span class="token punctuation">;</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>status<span class="token operator">==</span><span class="token boolean">true</span><span class="token punctuation">)</span>              <span class="token punctuation">{</span>                  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn_scan'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"Disconnect"</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>              <span class="token keyword">else</span>              <span class="token punctuation">{</span>                  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn_scan'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"Discover Devices"</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">resetUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>              <span class="token function">setConnectedStatus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">discoverSvcsAndChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//在第5课基础上添加的函数</span>      <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"discoverSvcsAndChars server="</span> <span class="token operator">+</span> connected_server<span class="token punctuation">)</span><span class="token punctuation">;</span>           connected_server<span class="token punctuation">.</span><span class="token function">getPrimaryServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>services <span class="token operator">=</span><span class="token operator">></span>           <span class="token punctuation">{</span>                      has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                      has_led_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                      has_device_information_service <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                   services_discovered <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                      service_count <span class="token operator">=</span> services<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Got "</span> <span class="token operator">+</span> service_count <span class="token operator">+</span> <span class="token string">" services"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   services<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>service <span class="token operator">=</span><span class="token operator">></span>                   <span class="token punctuation">{</span>                           <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> ACCELEROMETER_SERVICE<span class="token punctuation">)</span>                      <span class="token punctuation">{</span>                                has_accelerometer_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                          <span class="token punctuation">}</span>                           <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> LED_SERVICE<span class="token punctuation">)</span>                       <span class="token punctuation">{</span>                                has_led_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                           <span class="token punctuation">}</span>                           <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>uuid <span class="token operator">==</span> DEVICE_INFORMATION_SERVICE<span class="token punctuation">)</span>                       <span class="token punctuation">{</span>                                has_device_information_service <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                           <span class="token punctuation">}</span>                           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Getting Characteristics for service '</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                           service<span class="token punctuation">.</span><span class="token function">getCharacteristics</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>characteristics <span class="token operator">=</span><span class="token operator">></span>                       <span class="token punctuation">{</span>                                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'> Service: '</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                                services_discovered<span class="token operator">++</span><span class="token punctuation">;</span>                               characteristics_discovered <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                                characteristic_count <span class="token operator">=</span> characteristics<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                                characteristics<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>characteristic <span class="token operator">=</span><span class="token operator">></span>                           <span class="token punctuation">{</span>                                     characteristics_discovered<span class="token operator">++</span><span class="token punctuation">;</span>                                     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'>> Characteristic: '</span> <span class="token operator">+</span> characteristic<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>                                     <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> ACCELEROMETER_DATA<span class="token punctuation">)</span>                              <span class="token punctuation">{</span>                                          accelerometer_data <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                          has_accelerometer_data <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                     <span class="token punctuation">}</span>                                     <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> LED_MATRIX_STATE<span class="token punctuation">)</span>                               <span class="token punctuation">{</span>                                          led_matrix_state <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                          has_led_matrix_state <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                     <span class="token punctuation">}</span>                                     <span class="token keyword">if</span> <span class="token punctuation">(</span>characteristic<span class="token punctuation">.</span>uuid <span class="token operator">==</span> MODEL_NUMBER_STRING<span class="token punctuation">)</span>                               <span class="token punctuation">{</span>                                          model_number_string <span class="token operator">=</span> characteristic<span class="token punctuation">;</span>                                          has_model_name_string <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                     <span class="token punctuation">}</span>                                     <span class="token keyword">if</span> <span class="token punctuation">(</span>services_discovered <span class="token operator">==</span> service_count <span class="token operator">&amp;&amp;</span> characteristics_discovered <span class="token operator">==</span> characteristic_count<span class="token punctuation">)</span>                               <span class="token punctuation">{</span>                                          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"FINISHED DISCOVERY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                  <span class="token comment" spellcheck="true">// setDiscoveryStatus(true);       </span>                                  <span class="token comment" spellcheck="true">//setDiscoveryStatus(true);                  </span>                              <span class="token punctuation">}</span>                                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                           <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span></code></pre><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611165124.png" alt=""></p><ul><li><p>测试</p><p>打开测试网址，有以下效果即成功。</p><p><img src="/loading.gif" data-original="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611162316.png" alt=""></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
